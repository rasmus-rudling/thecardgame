{"version":3,"sources":["headerImage.png","red_card.png","blue_card.png","start/startView.js","chat/TimerReady.js","chat/Timer.js","chat/otherTeamView.js","chat/chatView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","require","StartView","email","setEmail","password","setPassword","setLoginError","loginError","history","useHistory","Container","className","Row","Col","src","alt","id","md","Form","onSubmit","event","preventDefault","auth","signInWithEmailAndPassword","then","push","error","console","log","submitLogin","Group","controlId","Label","Control","type","autoFocus","placeholder","onChange","target","value","Text","Button","TimerReady","currentUsers","useState","seconds","setSeconds","limit","setLimit","useEffect","interval","d","Date","secondStamp","getSeconds","minuteStamp","getMinutes","hourStamp","getHours","strSecondStamp","strMinuteStamp","strHourStamp","firestore","collection","doc","update","messages","FieldValue","arrayUnion","sender","message","senderImgURL","timestamp","usersVoted","setInterval","clearInterval","Timer","otherChats","handleChange","totSeconds","setTotSeconds","randn_bm","min","max","skew","u","v","Math","random","num","sqrt","cos","PI","pow","randIntNormal","round","OtherTeamView","setOtherChats","sentTexts0","setSentTexts0","sentTexts1","setSentTexts1","sentTexts2","setSentTexts2","fewestSentTexts","setFewestSentTexts","senders","otherTeamNames","otherTeamURL","forEach","_message","messageContainer","document","createElement","messageElement","rowElement","colElement","imgElementOther","nameTimeContainer","innerText","timeStamp","imgURL","append","getElementById","objDiv","scrollTop","scrollHeight","minSpace","maxSpace","skewSpace","randomWhiteSpaces","tempArray","msg","randomSenderIdx","randomSenderName","randomSenderImgURL","i","objToPush","ChatView","chats","setChats","name","setName","setImgURL","askIfReady","setAskIfReady","onAuthStateChanged","_usr","a","where","onSnapshot","res","docs","map","_doc","data","firstMailInCHat","teamReady","filter","_chat","_index","bool","users","user","innerHTML","index","array","length","chatRef","setTimeout","chosenRed","chosenRedCard","chosenBlue","chosenBlueCard","tempCardsContainer","r","redCardElement","b","blueCardElement","chosenCardContainer","imgElement","split","ready","readyToChoose","notReady","notReadyToChoose","arrayRemove","buttonElementYes","buttonElementNo","includes","addEventListener","popupcontent","timerContent","voteBoxContent","onClick","dbRef","increment","fluid","sm","lg","xs","newMessage","focus","bsPrefix","trigger","modal","to","App","updatePassword","newPassword","updateEmail","newEmail","exact","path","Boolean","window","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","navigator","serviceWorker","registration","unregister","catch"],"mappings":"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","file":"static/js/main.85e4557b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/headerImage.aa125e65.png\";","module.exports = __webpack_public_path__ + \"static/media/red_card.2abfa2da.png\";","module.exports = __webpack_public_path__ + \"static/media/blue_card.db0b65ea.png\";","import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {Container, Row, Col, Form, Button} from 'react-bootstrap';\r\nimport './startView.css'\r\n\r\nconst firebase = require('firebase');\r\n\r\nfunction StartView({email, setEmail, password, setPassword, loginError, setLoginError}) {\r\n    const history = useHistory();\r\n\r\n    function submitLogin(event) {\r\n        event.preventDefault();\r\n              \r\n        firebase.auth().signInWithEmailAndPassword(email, password).then(() => {\r\n            history.push('/chat');\r\n        \r\n        }, error => {\r\n            setLoginError('Server error');\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container className=\"startContainer\">\r\n            <Row>\r\n                <Col>\r\n                    <img src={require('../headerImage.png')}  alt=\"THE CARD GAME\" id=\"headerimg\"></img>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <div id=\"text\">\r\n                    </div>  \r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col  md={3}></Col>\r\n\r\n                <Col md={6}>      \r\n                    <div className=\"loginBox\">\r\n                        <Form onSubmit= {event => submitLogin(event)}>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email address:</Form.Label>\r\n\r\n                                <Form.Control\r\n                                    type=\"email\" \r\n                                    autoFocus \r\n                                    placeholder=\"Enter email\" \r\n                                    onChange={event => setEmail(event.target.value)}\r\n                                />\r\n\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password:</Form.Label>\r\n\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Password\" \r\n                                    onChange = {event => setPassword(event.target.value)}/>\r\n                            </Form.Group>\r\n\r\n                            <Button type=\"submit\">\r\n                                Logga in\r\n                            </Button>\r\n                        </Form>\r\n                    </div>\r\n                </Col>\r\n                \r\n                <Col md={3}></Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default StartView;","import React, { useState, useEffect } from 'react';\r\n\r\nconst firebase = require('firebase');\r\n\r\nfunction TimerReady({currentUsers}) {\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [limit, setLimit] = useState(15);\r\n\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n\r\n        setLimit(10);\r\n        \r\n        if (seconds >= limit) {\r\n            // setLimit(50)\r\n\r\n            if (limit === 300) {\r\n                setLimit(60)\r\n            }\r\n\r\n            setSeconds(0);\r\n\r\n            const d = new Date();\r\n            const secondStamp = d.getSeconds();\r\n            const minuteStamp = d.getMinutes();\r\n            const hourStamp = d.getHours();\r\n\r\n            const strSecondStamp = secondStamp < 10 ? `0${secondStamp}` : `${secondStamp}`;\r\n            const strMinuteStamp = minuteStamp < 10 ? `0${minuteStamp}` : `${minuteStamp}`;\r\n            const strHourStamp = hourStamp < 10 ? `0${hourStamp}` : `${hourStamp}`;\r\n            \r\n            firebase\r\n                .firestore()\r\n                .collection('chats')\r\n                .doc(currentUsers)\r\n                .update({\r\n                    messages: firebase.firestore.FieldValue.arrayUnion({\r\n                        sender: 'Admin',\r\n                        message: 'Är ni redo att gå till beslut?',\r\n                        senderImgURL: 'none',\r\n                        timestamp: `${strHourStamp}:${strMinuteStamp}:${strSecondStamp}`\r\n                    }),\r\n                    usersVoted: []\r\n                }).then(() => {\r\n                    console.log('Adminmeddelande skapat!')\r\n                })\r\n        }\r\n\r\n        interval = setInterval(() => {\r\n            setSeconds(seconds => seconds + 1);\r\n        }, 1000);\r\n        \r\n        return () => clearInterval(interval);\r\n    }, [seconds, currentUsers]);\r\n\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimerReady;","import React, { useState, useEffect } from 'react';\r\n\r\nfunction Timer({otherChats, handleChange}) {\r\n    const [limit, setLimit] = useState(5);\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [totSeconds, setTotSeconds] = useState(0);\r\n\r\n    function randn_bm(min, max, skew) {\r\n        let u = 0, v = 0;\r\n        while(u === 0) u = Math.random(); //Converting [0,1) to (0,1)\r\n        while(v === 0) v = Math.random();\r\n        let num = Math.sqrt( -2.0 * Math.log( u ) ) * Math.cos( 2.0 * Math.PI * v );\r\n    \r\n        num = num / 10.0 + 0.5; // Translate to 0 -> 1\r\n        if (num > 1 || num < 0) num = randn_bm(min, max, skew); // resample between 0 and 1 if out of range\r\n        num = Math.pow(num, skew); // Skew\r\n        num *= max - min; // Stretch to fill range\r\n        num += min; // offset to min\r\n\r\n        return num;\r\n    }\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n\r\n        if (seconds >= limit) {\r\n            setSeconds(0);\r\n            let randIntNormal;\r\n\r\n            if (totSeconds < 20) {\r\n                handleChange(3, 12, 1, otherChats)\r\n                randIntNormal = Math.round(randn_bm(2, 12, 1));\r\n                setLimit(randIntNormal);\r\n            } else if (totSeconds < 55) {\r\n                handleChange(2, 35, 2, otherChats)\r\n                randIntNormal = Math.round(randn_bm(2, 30, 1));\r\n                setLimit(randIntNormal);\r\n            } else if (totSeconds < 90) {\r\n                handleChange(2, 12, 2, otherChats)\r\n                randIntNormal = Math.round(randn_bm(3, 12, 3));\r\n                setLimit(randIntNormal);\r\n            } else if (totSeconds < 100) {\r\n                handleChange(2, 12, 3, otherChats)\r\n                randIntNormal = Math.round(randn_bm(2, 12, 1));\r\n                setLimit(randIntNormal);\r\n            } else {\r\n                handleChange(3, 35, 2, otherChats)\r\n                randIntNormal = Math.round(randn_bm(2, 30, 1));\r\n                setLimit(randIntNormal);\r\n            }\r\n        }\r\n\r\n        interval = setInterval(() => {\r\n            setSeconds(seconds => seconds + 1);\r\n            setTotSeconds(totSeconds => totSeconds + 1);\r\n        }, 1000);\r\n        \r\n        return () => clearInterval(interval);\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Timer;","import React, { useEffect, useState } from 'react';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport Timer from './Timer';\r\n\r\n\r\nfunction OtherTeamView () {\r\n    const [otherChats, setOtherChats] = useState([]);\r\n    const [sentTexts0, setSentTexts0] = useState(0);\r\n    const [sentTexts1, setSentTexts1] = useState(0);\r\n    const [sentTexts2, setSentTexts2] = useState(0);\r\n    const [fewestSentTexts, setFewestSentTexts] = useState(sentTexts0);\r\n\r\n    const senders = [sentTexts0, sentTexts1, sentTexts2]\r\n\r\n    const invisibleText = '　';\r\n    const otherTeamNames = ['Axel Hagel', 'Elin Rudling', 'Niklas Löwbeer'];\r\n    const otherTeamURL = ['https://i.imgur.com/IBlrCCT.jpg', 'https://i.imgur.com/wBeQrMt.jpg', 'https://i.imgur.com/GRSyGWE.jpg']\r\n\r\n    function randn_bm(min, max, skew) {\r\n        let u = 0, v = 0;\r\n        while(u === 0) u = Math.random(); //Converting [0,1) to (0,1)\r\n        while(v === 0) v = Math.random();\r\n        let num = Math.sqrt( -2.0 * Math.log( u ) ) * Math.cos( 2.0 * Math.PI * v );\r\n    \r\n        num = num / 10.0 + 0.5; // Translate to 0 -> 1\r\n        if (num > 1 || num < 0) num = randn_bm(min, max, skew); // resample between 0 and 1 if out of range\r\n        num = Math.pow(num, skew); // Skew\r\n        num *= max - min; // Stretch to fill range\r\n        num += min; // offset to min\r\n\r\n        return num;\r\n    }\r\n    \r\n    function handleChange(minSpace, maxSpace, skewSpace, ...otherChats) {\r\n        let tempArray = otherChats;\r\n        let msg = \"\";\r\n        let randomWhiteSpaces;\r\n\r\n        randomWhiteSpaces = Math.round(randn_bm(minSpace, maxSpace, skewSpace));\r\n        \r\n        let randomSenderIdx = Math.round(Math.random() * 2);\r\n\r\n        if (senders[randomSenderIdx] !== fewestSentTexts) {\r\n            randomSenderIdx = Math.round(Math.random() * 2);\r\n\r\n            if (senders[randomSenderIdx] !== fewestSentTexts) {\r\n                randomSenderIdx = Math.round(Math.random() * 2);\r\n\r\n                if (senders[randomSenderIdx] !== fewestSentTexts) {\r\n                    randomSenderIdx = Math.round(Math.random() * 2);\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (randomSenderIdx === 0) {\r\n            setSentTexts0(sentTexts0 => sentTexts0 + 1)\r\n        } else if (randomSenderIdx === 1) {\r\n            setSentTexts1(sentTexts1 => sentTexts1 + 1)\r\n        } else {\r\n            setSentTexts2(sentTexts2 => sentTexts2 + 1)\r\n        }\r\n\r\n        \r\n        if (sentTexts0 < fewestSentTexts) {\r\n            setFewestSentTexts(sentTexts0);\r\n        } else if (sentTexts1 < fewestSentTexts) {\r\n            setFewestSentTexts(sentTexts1);\r\n        } else {\r\n            setFewestSentTexts(sentTexts2);\r\n        }\r\n\r\n        // console.log(`Idx: ${randomSenderIdx} val: ${senders[randomSenderIdx]}`)\r\n\r\n        let randomSenderName = otherTeamNames[randomSenderIdx];\r\n        let randomSenderImgURL = otherTeamURL[randomSenderIdx];\r\n\r\n        for (let i = 0; i < randomWhiteSpaces; i++) {\r\n            msg += invisibleText;\r\n        }\r\n        \r\n        const d = new Date();\r\n        const minuteStamp = d.getMinutes();\r\n        const hourStamp = d.getHours();\r\n        const strMinuteStamp = minuteStamp < 10 ? `0${minuteStamp}` : `${minuteStamp}`;\r\n        const strHourStamp = hourStamp < 10 ? `0${hourStamp}` : `${hourStamp}`;\r\n\r\n        const objToPush = {message: msg, sender: randomSenderName, imgURL: randomSenderImgURL, timeStamp: `${strHourStamp}:${strMinuteStamp}`};\r\n        \r\n        tempArray.push(objToPush);\r\n\r\n        setOtherChats(tempArray);\r\n    }\r\n\r\n    useEffect(() => {\r\n        otherChats.forEach(_message => {\r\n            const messageContainer = document.createElement('div');\r\n            const messageElement = document.createElement('div');\r\n            const rowElement = document.createElement('div');\r\n            const colElement = document.createElement('div');\r\n            const imgElementOther = document.createElement('img');\r\n            const nameTimeContainer =  document.createElement('div');\r\n\r\n            nameTimeContainer.innerText = `${_message.timeStamp} ${_message.sender}` \r\n\r\n            imgElementOther.src = _message.imgURL;\r\n            nameTimeContainer.className = 'nameTimeTag';\r\n            imgElementOther.className = 'img-element-other-team';\r\n\r\n            rowElement.className = 'row';\r\n            colElement.className = 'col';\r\n\r\n            messageElement.innerText = _message.message;\r\n            messageElement.className = 'otherMessages';\r\n            messageContainer.className = 'otherMessagesBox'\r\n\r\n            messageContainer.append(nameTimeContainer);\r\n            messageContainer.append(imgElementOther);\r\n            messageContainer.append(messageElement);\r\n\r\n            colElement.append(messageContainer);\r\n            rowElement.append(colElement)\r\n            \r\n            // OBS OBS, detta är en så sjuk ful lösning, lär dig hur arv funkar mellan komponenter\r\n            if (messageElement.innerText !== 'undefined') {\r\n                \r\n                document.getElementById('chatTextOther').append(rowElement);\r\n\r\n                const objDiv = document.getElementById(\"chatTextOther\");\r\n                objDiv.scrollTop = objDiv.scrollHeight;\r\n            }\r\n        })     \r\n    }, [otherChats]) // När otherChats uppdateras ska hela denna komponent uppdateras\r\n\r\n    return (\r\n        <div className=\"chatBox\" id=\"secretChat\">\r\n            <Row>\r\n                <Col>      \r\n                    <div id=\"userinfo\">\r\n                        <b>Motståndarlaget:</b><br/> \r\n                        <img src={'https://i.imgur.com/IBlrCCT.jpg'} alt=\"\" /> Axel Hagel\r\n                        <img src={'https://i.imgur.com/wBeQrMt.jpg'} alt=\"\" /> Elin Rudling\r\n                        <img src={'https://i.imgur.com/GRSyGWE.jpg'} alt=\"\" /> Niklas Löwbeer\r\n                    </div>   \r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>    \r\n                    <div id=\"chatTextOther\">\r\n                        <Timer\r\n                            otherChats = {otherChats}\r\n                            handleChange ={handleChange}\r\n                        />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OtherTeamView;","import React, { useEffect, useState } from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {Container, Row, Col, Button, Form} from 'react-bootstrap';\r\nimport Popup from \"reactjs-popup\";\r\n\r\nimport TimerReady from './TimerReady';\r\n\r\nimport './chatview.css';\r\nimport './chat1.css';\r\nimport './chat2.css';\r\n\r\nimport OtherTeamView from './otherTeamView';\r\n\r\nconst firebase = require('firebase');\r\n\r\nfunction ChatView({email}) {\r\n    const history = useHistory();\r\n    const [chats, setChats] = useState([]);\r\n    const [name, setName] = useState('');\r\n    const [imgURL, setImgURL] = useState('');\r\n    const [askIfReady, setAskIfReady] = useState(true);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async _usr => {\r\n            if (!_usr) { // Om användaren INTE finns --> Skicka användaren till startsidan\r\n                history.push('/');\r\n            } else { \r\n                await firebase // Invänta svar från databseen\r\n                    .firestore() // Firestore är den DB vi använder \r\n                    .collection('chats') // Hämtar collection 'chats'\r\n                    .where('users', 'array-contains', _usr.email) // Välj de chatter vars användare innehåller den aktuella användaren\r\n                    .onSnapshot(async res => {\r\n                        const chats = res.docs.map(_doc => _doc.data());\r\n                        await (\r\n                            setChats(chats)\r\n                        )\r\n                    })\r\n            }\r\n        })\r\n\r\n        firebase\r\n            .firestore()\r\n            .collection('users')\r\n            .doc(email)\r\n            .onSnapshot(function(doc) {\r\n                setName(doc.data().name)\r\n                setImgURL(doc.data().imgURL)\r\n            });\r\n    }, []);\r\n    \r\n    const askIfReadyHandler = () => {\r\n        if (askIfReady) {\r\n            setAskIfReady(false);\r\n        }\r\n    }\r\n\r\n    let currentUsers = \"\";\r\n    let usersVoted = [];\r\n    let firstMailInCHat;\r\n    let teamReady;\r\n    \r\n    console.log('---')\r\n    console.log(chats[1])\r\n\r\n    chats.filter((_chat, _index) => {\r\n        let bool = false;\r\n\r\n        _chat.users.forEach(user => {\r\n            if (user === email) {\r\n                bool = true;\r\n            }\r\n        })\r\n\r\n        return bool;\r\n    }).forEach((_chat, _index) => {\r\n        document.getElementById('chatMessages').innerHTML = \"\";\r\n\r\n        _chat.users.forEach((user, index, array) => {\r\n            if (index !== array.length - 1) { \r\n                currentUsers += user + \":\"; \r\n            } else {\r\n                currentUsers += user\r\n            }\r\n        })\r\n\r\n        console.log(_index)\r\n        teamReady = _chat.teamReady;\r\n\r\n        usersVoted = _chat.usersVoted;\r\n\r\n        const chatRef = firebase.firestore().collection('chats').doc(currentUsers);\r\n\r\n        console.log(teamReady, 'Teamready')\r\n        // --- Visa valda kort ---\r\n        if (teamReady) {\r\n            setTimeout(() => {\r\n                \r\n                const chosenRed = _chat.chosenRedCard;\r\n                const chosenBlue = _chat.chosenBlueCard;\r\n                console.log(chosenRed)\r\n                console.log(chosenBlue)\r\n                const tempCardsContainer = document.createElement('div');\r\n\r\n                for (let r = 0; r < chosenRed; r++) {\r\n                    const redCardElement = document.createElement('img');\r\n                    redCardElement.src = require('../red_card.png');\r\n                    redCardElement.className = 'choicesCard';\r\n                    tempCardsContainer.append(redCardElement)\r\n                }\r\n                \r\n                for (let b = 0; b < chosenBlue; b++) {\r\n                    const blueCardElement = document.createElement('img');\r\n                    blueCardElement.src = require('../blue_card.png');\r\n                    blueCardElement.className = 'choicesCard';\r\n                    tempCardsContainer.append(blueCardElement)\r\n                }\r\n\r\n                const chosenCardContainer = document.getElementById('chosenCardContainer');\r\n                chosenCardContainer.innerHTML = '';\r\n                chosenCardContainer.append(tempCardsContainer);\r\n            }, 50)\r\n            \r\n        }\r\n        // -----------------------\r\n\r\n        _chat.messages.forEach(_message => { \r\n            const messageElement = document.createElement('div');\r\n            const rowElement = document.createElement('div');\r\n            const colElement = document.createElement('div');\r\n            const imgElement = document.createElement('img');\r\n            firstMailInCHat = currentUsers.split(':')[0]\r\n\r\n            imgElement.src = _message.senderImgURL\r\n\r\n            rowElement.className = 'row';\r\n            colElement.className = 'col';\r\n            \r\n            if (_message.sender === 'Admin') {\r\n                const ready = _chat.readyToChoose;\r\n                const notReady = _chat.notReadyToChoose;\r\n                \r\n                if (ready + notReady === 3) {\r\n                    if (ready >= 2) {\r\n                        chatRef.update({\r\n                            teamReady: true\r\n                        })\r\n\r\n                        if (email === firstMailInCHat) {\r\n                            askIfReadyHandler();\r\n                        }\r\n                    }\r\n\r\n                    chatRef.update({\r\n                        messages: firebase.firestore.FieldValue.arrayRemove(_message)\r\n                    })\r\n\r\n                    chatRef.update({\r\n                        readyToChoose: 0,\r\n                        notReadyToChoose: 0\r\n                    })\r\n                }\r\n\r\n                messageElement.className = 'adminMessages';\r\n                messageElement.innerText = ` ${_message.message}`;\r\n                const buttonElementYes = document.createElement('button');\r\n                const buttonElementNo = document.createElement('button');\r\n\r\n                buttonElementYes.innerText = 'Ja';\r\n                buttonElementNo.innerText = 'Nej';\r\n\r\n                console.log(usersVoted.includes(email));\r\n\r\n                if (usersVoted.includes(email)) {\r\n                    buttonElementYes.className = 'hide';\r\n                    buttonElementNo.className = 'hide';\r\n                } else {\r\n                    buttonElementYes.className = '';\r\n                    buttonElementNo.className = '';\r\n                }\r\n\r\n                buttonElementYes.addEventListener(\"click\", () => {\r\n                    buttonElementYes.className = 'hide';\r\n                    buttonElementNo.className = 'hide';\r\n\r\n                    chatRef.update({\r\n                        readyToChoose: _chat.readyToChoose + 1,\r\n                        usersVoted: firebase.firestore.FieldValue.arrayUnion(email)\r\n                    })\r\n                });\r\n\r\n                buttonElementNo.addEventListener(\"click\", () => {\r\n                    buttonElementYes.className = 'hide';\r\n                    buttonElementNo.className = 'hide';\r\n\r\n                    chatRef.update({\r\n                        notReadyToChoose: _chat.notReadyToChoose + 1,\r\n                        usersVoted: firebase.firestore.FieldValue.arrayUnion(email)\r\n                    })\r\n                });\r\n\r\n                messageElement.append(buttonElementYes);\r\n                messageElement.append(buttonElementNo);\r\n\r\n                // Låt dessa motsvara hur många readyToAnswer i databsen\r\n                // När minst två är gröna så ska välj-kort-rutan visas\r\n\r\n                for (let i = 0; i < ready; i++) {\r\n                    messageElement.append('✔️');\r\n                }\r\n\r\n                for (let i = 0; i < notReady; i++) {\r\n                    messageElement.append('❌');\r\n                }\r\n                \r\n                colElement.append(messageElement);\r\n                rowElement.append(colElement);\r\n            } else if (_message.sender === name) { // the users own messges\r\n                const messageContainer = document.createElement('div');\r\n                const nameTimeContainer =  document.createElement('div');\r\n                \r\n                nameTimeContainer.innerText =  `${_message.timestamp} ${_message.sender}` \r\n                messageElement.innerText = ` ${_message.message}`;\r\n                messageContainer.append(nameTimeContainer)\r\n                messageContainer.append(messageElement);\r\n                messageContainer.append(imgElement);\r\n\r\n                messageContainer.className = 'myMessagesBox'\r\n                messageElement.className = 'myMessages';\r\n                nameTimeContainer.className = 'nameTimeTag';\r\n                colElement.append(messageContainer)\r\n                rowElement.append(colElement)\r\n            } else { // messages from other people in chat 1\r\n                const messageContainer = document.createElement('div');\r\n                const nameTimeContainer =  document.createElement('div');\r\n\r\n                nameTimeContainer.innerText = `${_message.timestamp} ${_message.sender}`; \r\n                messageElement.innerText = ` ${_message.message}`;\r\n\r\n                messageContainer.append(nameTimeContainer);\r\n                messageContainer.append(imgElement);\r\n\r\n                messageContainer.append(messageElement);\r\n                \r\n\r\n                messageContainer.className = 'otherMessagesBox'\r\n                messageElement.className = 'otherMessages';\r\n                nameTimeContainer.className = 'nameTimeTag';\r\n                colElement.append(messageContainer)\r\n                rowElement.append(colElement)\r\n                \r\n            }     \r\n\r\n            document.getElementById('chatMessages').append(rowElement);\r\n        })\r\n\r\n        const objDiv = document.getElementById(\"chatMessages\");\r\n        objDiv.scrollTop = objDiv.scrollHeight;  \r\n    })\r\n\r\n    function submitMessage(event) {\r\n        event.preventDefault();\r\n        const newMessage = document.getElementById('msg-box').value;\r\n        \r\n        const d = new Date();\r\n        const minuteStamp = d.getMinutes();\r\n        const hourStamp = d.getHours();\r\n        const strMinuteStamp = minuteStamp < 10 ? `0${minuteStamp}` : `${minuteStamp}`;\r\n        const strHourStamp = hourStamp < 10 ? `0${hourStamp}` : `${hourStamp}`;\r\n\r\n        firebase\r\n            .firestore()\r\n            .collection('chats')\r\n            .doc(currentUsers)\r\n            .update({\r\n                messages: firebase.firestore.FieldValue.arrayUnion({\r\n                    sender: name,\r\n                    message: newMessage,\r\n                    timestamp: `${strHourStamp}:${strMinuteStamp}`,\r\n                    senderImgURL: imgURL\r\n                })\r\n            })\r\n\r\n        document.getElementById('msg-box').value = '';\r\n        document.getElementById(\"msg-box\").focus();\r\n    }\r\n    // --------------------\r\n\r\n    const chooseRedCard = () => {\r\n        document.getElementById('redCardChooser').className = 'hide';\r\n        document.getElementById('blueCardChooser').className = 'hide';\r\n        const dbRef = firebase.firestore().collection('chats').doc(currentUsers)\r\n        let increment = firebase.firestore.FieldValue.increment(1);\r\n        \r\n        dbRef.update({\r\n            chosenRedCard: increment\r\n        })\r\n    }\r\n\r\n    const chooseBlueCard = () => {\r\n        document.getElementById('redCardChooser').className = 'hide';\r\n        document.getElementById('blueCardChooser').className = 'hide';\r\n        \r\n        const dbRef = firebase.firestore().collection('chats').doc(currentUsers)\r\n        let increment = firebase.firestore.FieldValue.increment(1);\r\n        \r\n        dbRef.update({\r\n            chosenBlueCard: increment\r\n        })\r\n    }\r\n\r\n    /* POP UP CONTENT: */\r\n    let popupcontent = (\r\n        <div className=\"popContent\">  \r\n            <div id=\"header\"> SPELGRELER </div>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Atque, a nostrum.\r\n            Dolorem, repellat quidem ut, minima sint vel eveniet quibusdam voluptates\r\n            delectus doloremque, explicabo tempore dicta adipisci fugit amet dignissimos?\r\n            <br />\r\n            <br />\r\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequatur sit\r\n            commodi beatae optio voluptatum sed eius cumque, delectus saepe repudiandae\r\n            explicabo nemo nam libero ad, doloribus, voluptas rem alias. Vitae?\r\n        </div>\r\n    );\r\n\r\n    // ---\r\n\r\n    var image = \"https://img.freepik.com/free-vector/businessman-profile-cartoon_18591-58479.jpg?size=338&ext=jpg\";\r\n    \r\n    let timerContent = null;\r\n\r\n    if (email === firstMailInCHat && askIfReady) {\r\n        timerContent = (\r\n            <TimerReady currentUsers={currentUsers} />\r\n        )\r\n    }\r\n\r\n    let voteBoxContent = null;\r\n\r\n    if (teamReady) {\r\n        voteBoxContent = (\r\n            <div id='voteBox'>\r\n                <Row>\r\n                    <Col>\r\n                        <h5>VÄLJ KORT HÄR</h5> \r\n                        \r\n                        Se till att vara överrens i gruppen innan valet görs.\r\n                        Ni väljer kort som ett lag.\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"inline-block\" id='redCardChooser'>\r\n                            <div onClick={chooseRedCard}>\r\n                                <img src={require('../red_card.png')}/>\r\n                                <h6 className=\"inline-block\">RÖTT KORT</h6>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"inline-block\" id='blueCardChooser'>\r\n                            <div onClick={chooseBlueCard}>\r\n                                <img src={require('../blue_card.png')}/>\r\n                                <h6 className=\"inline-block\">BLÅTT KORT</h6>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <p className='choicesText'>Era val: </p>\r\n                        <div id='chosenCardContainer'>\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container className=\"chatContainer\" fluid>\r\n            {/* HEADER   lägg till fluid={true} här uppe om chatterna ska fylla hela skärmen */}\r\n            <Row>\r\n                <Col>\r\n                    <img src={require('../headerImage.png')}  alt=\"THE CARD GAME\" id=\"headerimg\"></img>\r\n                </Col>\r\n            </Row> \r\n      \r\n            <Row > {/* ROW FOR THE CHAT WINDOWS */}\r\n                <Col sm={12} lg={6} >  {/* ACTIVE CHAT */}\r\n                    <div className=\"chatBox\">\r\n                        <Row>\r\n                            <Col md={4}>      \r\n                                <div id=\"userinfo\">\r\n                                    <b>Inloggad som:</b><br/> \r\n                                    <img src={image} alt=\"\" /> {name}\r\n                                </div>  \r\n                            </Col>\r\n\r\n                            <Col md={8}>\r\n                                <div id=\"userinfo\">\r\n                                    <b>Lagmedlemmar</b><br/> \r\n                                    <img src={\"https://www.positivelysplendid.com/wp-content/uploads/2013/09/Circle-Crop-Profile-300x300.png\"} alt=\"\" /> Emma Bobsson\r\n                                    <img src={\"https://images.squarespace-cdn.com/content/v1/5589a812e4b0248058743f7e/1562001389112-WFLCO7JEU2GDDM9ANYXT/ke17ZwdGBToddI8pDm48kMh3mVmBaCAeGwqCLG3iONRZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PITeQtWPcxF65ANawkK25DREOmFck9peR6QL8AnpRiPJE/LAURA+PROFILE+CIRCLE+NEW.png\"} alt=\"\" /> Mary Major\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                {timerContent}\r\n\r\n                                <div id=\"chatMessages\">\r\n                                    \r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col xs={12}>    \r\n                                <div id=\"submitRow\">\r\n                                    <Form onSubmit={submitMessage}>\r\n                                        <Row>\r\n                                            <Col>    \r\n                                                <Form.Row >\r\n                                                    <Form.Control \r\n                                                        bsPrefix=\"send_text\" \r\n                                                        type=\"text\" \r\n                                                        id=\"msg-box\" \r\n                                                        autoFocus \r\n                                                    />\r\n                                                    \r\n                                                    <Button  \r\n                                                        bsPrefix=\"send_button\" \r\n                                                        type=\"submit\" \r\n                                                    >\r\n                                                            SKICKA\r\n                                                    </Button>\r\n                                                </Form.Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        \r\n                                    </Form>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n\r\n                <Col sm={12} lg={6}> {/* 2ND CHAT */}\r\n                    <OtherTeamView />\r\n                    {voteBoxContent}\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>    \r\n                    <div id=\"logout\">\r\n                        {/* POP-UP WINDOW FÖR SPELREGLER */}\r\n\r\n                        <Popup trigger={<u>Spelregler</u>} modal>\r\n                            {popupcontent}\r\n                        </Popup>\r\n\r\n                    <Link to=\"/ny_firebase_chatt\">Log out</Link></div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n  }\r\n\r\nexport default ChatView;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport StartView from './start/startView.js';\r\nimport ChatView from './chat/chatView.js';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n    const [email, setEmail] = useState(\"rrudling@kth.se\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loginError, setLoginError] = useState('');\r\n\r\n    function updatePassword(newPassword) {\r\n        setPassword(newPassword);\r\n    };\r\n\r\n    function updateEmail(newEmail) {\r\n        console.log(newEmail, 'raz12')\r\n        setEmail(newEmail)\r\n    }\r\n\r\n    function updateEmail(newEmail) {\r\n        setEmail(newEmail)\r\n    }\r\n\r\n// Kanske går att lösa på snyggare sätt än att ha ett separat state för chatView.\r\n//  const [emailInChat, setEmailInChat] = React.useState(\"No user\");\r\n\r\n    return (    \r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\" >\r\n                    <StartView\r\n                        email = {email}\r\n                        setEmail = {updateEmail}\r\n                        password = {password}\r\n                        setPassword = {updatePassword} // Vänster är blir variabelnamnet\r\n                        loginError = {loginError}\r\n                        setLoginError = {setLoginError}\r\n                    />\r\n                </ Route>\r\n                \r\n                <Route exact path=\"/ny_firebase_chatt\" >\r\n                    <StartView\r\n                        email = {email}\r\n                        setEmail = {updateEmail}\r\n                        password = {password}\r\n                        setPassword = {updatePassword} // Vänster är blir variabelnamnet\r\n                        loginError = {loginError}\r\n                        setLoginError = {setLoginError}\r\n                    />\r\n                </Route>\r\n                \r\n                <Route exact path=\"/chat\">\r\n                    <ChatView\r\n                        email = {email}\r\n                    />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst firebase = require('firebase');\r\nrequire('firebase/firestore');\r\n\r\n// Normalt sätt vill man inte lägga sin API-nyckel här men det funkar i testmiljöer\r\nconst firebaseConfig = { \r\n    apiKey: \"AIzaSyAdpOM4Bx2jIRTmqkLdxq2-WysYpZXW_BI\",\r\n    authDomain: \"chatt-app-b6c9a.firebaseapp.com\",\r\n    databaseURL: \"https://chatt-app-b6c9a.firebaseio.com\",\r\n    projectId: \"chatt-app-b6c9a\",\r\n    storageBucket: \"chatt-app-b6c9a.appspot.com\",\r\n    messagingSenderId: \"999297534472\",\r\n    appId: \"1:999297534472:web:5e2d45b432ecd04f385fbd\",\r\n    measurementId: \"G-P2SMFJCGS3\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nReactDOM.render(\r\n    <App />\r\n    , \r\n    document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}