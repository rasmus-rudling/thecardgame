{"version":3,"sources":["headerTextCards.png","chat/chatView.js","start/startView.js","start/startContainer.js","chat/chatContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ChatView","email","image","name","Container","className","Row","Col","src","require","alt","id","sm","lg","md","xs","InputGroup","FormControl","bsPrefix","Append","Button","variant","to","firebase","StartView","setEmail","password","setPassword","setLoginError","loginError","history","useHistory","Form","onSubmit","e","preventDefault","auth","signInWithEmailAndPassword","then","console","log","push","error","Group","controlId","Label","Control","type","autoFocus","placeholder","onChange","target","value","Text","Start","Chat","emailInChat","App","React","useState","setEmailInChat","useEffect","exact","path","Boolean","window","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7f6f7b01.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/headerTextCards.ef84d908.png\";","import React, { useEffect } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Container, Row, Col, Button, FormControl, InputGroup} from 'react-bootstrap';\r\n\r\n\r\n//import * as ROUTES from '../constants/routes.js';\r\n//^won't be needed\r\n\r\nfunction ChatView({email}) {\r\n // const [emailInChat, setEmailInChat] = React.useState(email);\r\n\r\n  /*\r\n  useEffect(() => {\r\n    setEmailInChat(email)\r\n    console.log(email)\r\n  }, [email]);\r\n  \r\n  console.log(email)\r\n  console.log(emailInChat)\r\n  */\r\n\r\n  var image = \"https://img.freepik.com/free-vector/businessman-profile-cartoon_18591-58479.jpg?size=338&ext=jpg\";\r\n\r\n  if(email===\"Rasmus\" || email===\"rasmus\"  || email===\"rrudling@kth.se\" || email===\"rrudling@gmail.com\"){\r\n    var image = \"https://scontent-arn2-2.xx.fbcdn.net/v/t1.0-9/68780115_10218157623043647_869986299145093120_n.jpg?_nc_cat=105&_nc_sid=85a577&_nc_ohc=mwN7yisOxXQAX8Pe3nH&_nc_ht=scontent-arn2-2.xx&oh=adb96402da673a7884160afacee987f7&oe=5E957F7B\";\r\n    var name = \" Rasmus Rudling\";\r\n  }else if(email===\"Johanna\" || email===\"johanna\"){\r\n    var image = \"https://scontent-arn2-1.xx.fbcdn.net/v/t1.0-9/s960x960/62459332_10211557969345271_2008241031601979392_o.jpg?_nc_cat=109&_nc_sid=85a577&_nc_ohc=srJZq4IbFGsAX-Dbd-q&_nc_ht=scontent-arn2-1.xx&_nc_tp=7&oh=dcd920d469e8c96a356ab28a35eadfae&oe=5E95855E\";\r\n    var name = \" Johanna Simfors\";\r\n  }else{\r\n    var image = \"https://img.freepik.com/free-vector/businessman-profile-cartoon_18591-58479.jpg?size=338&ext=jpg\";\r\n  }\r\n  \r\n\r\n    return (\r\n      <Container className=\"chatContainer\">\r\n        {/* HEADER   l채gg till fluid={true} h채r uppe om chatterna ska fylla hela sk채rmen */}\r\n      <Row>\r\n          <Col>\r\n              <img src={require('../headerTextCards.png')}  alt=\"THE CARD GAME\" id=\"headerimg\"></img>\r\n          </Col>\r\n      </Row> \r\n      \r\n      <Row > {/* ROW FOR THE CHAT WINDOWS */}\r\n\r\n    \r\n        <Col sm={12} lg={6} >  {/* ACTIVE CHAT */}\r\n        <div className=\"chatBox\">\r\n          <Row>\r\n              <Col md={4}>      \r\n                  <div id=\"userinfo\">\r\n                      <b>Inloggad som:</b><br/> \r\n                      <img src={image} alt=\"\" /> {name?name:email}\r\n                      \r\n                  </div>  \r\n              </Col>\r\n              <Col md={8}>\r\n                <div id=\"userinfo\">\r\n                  <b>Lagmedlemmar</b><br/> \r\n                  <img src={\"https://www.positivelysplendid.com/wp-content/uploads/2013/09/Circle-Crop-Profile-300x300.png\"} alt=\"\" /> Emma Bobsson\r\n                  <img src={\"https://images.squarespace-cdn.com/content/v1/5589a812e4b0248058743f7e/1562001389112-WFLCO7JEU2GDDM9ANYXT/ke17ZwdGBToddI8pDm48kMh3mVmBaCAeGwqCLG3iONRZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PITeQtWPcxF65ANawkK25DREOmFck9peR6QL8AnpRiPJE/LAURA+PROFILE+CIRCLE+NEW.png\"} alt=\"\" /> Mary Major\r\n                  \r\n                </div>\r\n              </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n              <Col>    \r\n                  <div id=\"textRow\">\r\n                    <div id=\"chatText\"></div>\r\n                  </div>\r\n              </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n              <Col xs={12}>    \r\n                  <div id=\"submitRow\">\r\n                  <InputGroup>\r\n                    <FormControl bsPrefix=\"send_text\"/>\r\n                    <InputGroup.Append>\r\n                      <Button md=\"auto\" variant=\"outline-dark\" bsPrefix=\"send_button\"><img src={\"https://cdn1.iconfinder.com/data/icons/mail-2-basic/512/45-Send-512.png\"}/></Button>\r\n                    </InputGroup.Append>\r\n                  </InputGroup>\r\n                  </div>\r\n              </Col>\r\n          </Row>\r\n          </div>\r\n        </Col>\r\n\r\n  \r\n        <Col sm={12} lg={6}> {/* 2ND CHAT */}\r\n        <div className=\"chatBox\" id=\"secretChat\">\r\n          <Row>\r\n              <Col>      \r\n              <div id=\"userinfo\">\r\n                      <b>Motst책ndarlaget:</b><br/> \r\n                      <img src={\"https://res.cloudinary.com/inbound-org/image/twitter/w_200/189315459.jpg\"} alt=\"\" /> Sven Svensson\r\n                      <img src={\"https://s3-eu-west-1.amazonaws.com/video.gallereplay.com/production/user_108/renauddavies_2704201773733.jpg\"} alt=\"\" /> John Doe\r\n                      <img src={\"https://images.squarespace-cdn.com/content/v1/54bbd50ce4b05e8a36418abc/1533226867020-NALD4HA8GBL3IUIQE9PM/ke17ZwdGBToddI8pDm48kMh3mVmBaCAeGwqCLG3iONRZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PITeQtWPcxF65ANawkK25DREOmFck9peR6QL8AnpRiPJE/rachel-rouhana-profile-picture-circle.png\"} alt=\"\" /> Mary Moe\r\n\r\n\r\n                  </div>   \r\n              </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n              <Col>    \r\n                  <div id=\"textRow\">\r\n                    <div id=\"chatText\">\r\n                      <p className=\"animate\" id=\"animation\">Diskussion p책g책r. . . </p>\r\n                    </div>\r\n                  </div>\r\n              </Col>\r\n          </Row>\r\n          </div>\r\n        </Col>\r\n        \r\n    </Row>\r\n\r\n\r\n    <Row>\r\n        <Col>    \r\n            <div id=\"logout\"><u>Spelregler</u><Link to=\"/\">Log out</Link></div>\r\n        </Col>\r\n    </Row>\r\n\r\n    </Container>\r\n    );\r\n  }\r\n\r\nexport default ChatView;\r\n\r\n\r\n","import React from 'react';\r\nimport {Link, Redirect, Route, useHistory} from 'react-router-dom';\r\nimport {Container, Row, Col, Form, Button} from 'react-bootstrap';\r\nimport ChatComponent from '../chat/chatView.js';\r\n\r\nconst firebase = require('firebase');\r\n\r\n//import * as ROUTES from '../constants/routes.js';\r\n//^won't be needed\r\n\r\n\r\nfunction StartView({email, setEmail, password, setPassword, loginError, setLoginError}) {\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <Container className=\"startContainer\">\r\n        <Row>\r\n            <Col>\r\n                <img src={require('../headerTextCards.png')}  alt=\"THE CARD GAME\" id=\"headerimg\"></img>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col>\r\n                <div id=\"text\">\r\n                    V채lkommen till The Card Game! H채r 채r reglerna: Lorem ipsum dolor sit amet, no consequat assueverit honestatis vix. Nam an error mundi veritus, quem tractatos at sea. Eos cu soleat graece. Volumus repudiandae pri eu, ad usu veniam propriae assueverit. Mundi primis aperiam an eam, facete omittantur eum at. Eligendi dissentiet concludaturque ne nec, nam et nisl ornatus voluptatibus, ea prompta fabulas pri.\r\n                </div>  \r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            \r\n        <Col  md={3}></Col>\r\n            <Col md={6}>      \r\n                <div className=\"loginBox\">\r\n                    <Form onSubmit= {e => {\r\n                        e.preventDefault();\r\n                        \r\n                        firebase.auth().signInWithEmailAndPassword(email, password).then(() => {\r\n                            console.log('R01')\r\n                            history.push('/chat');\r\n                            // window.location = \"chat\"\r\n                        \r\n                        }, error => {\r\n                            setLoginError('Server error');\r\n                            console.log(\"email: \" + email);\r\n                            console.log(\"password: \" + password);\r\n                            console.log(error)\r\n                        });\r\n                    }}>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address:</Form.Label>\r\n                            <Form.Control type=\"email\" autoFocus placeholder=\"Enter email\" onChange={e => {\r\n                                setEmail(e.target.value);\r\n                            }}\r\n\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            Anv채nd samma mejl som du kommunicerat med oss med\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password:</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Password\" onChange={setPassword}/>\r\n                        </Form.Group>\r\n                        <Button type=\"submit\">\r\n                            Logga in\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </Col>\r\n            <Col  md={3}></Col>\r\n\r\n      </Row>\r\n    </Container>\r\n    );\r\n  }\r\n\r\nexport default StartView;","import React from 'react';\r\nimport StartView from './startView.js'\r\n\r\nconst Start = ({email, setEmail, password, setPassword, loginError, setLoginError}) => {\r\n    // Dessa tv책 ska uppdateras och sen skickas till gameController.\r\n    /*const [email, setEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    \r\n    const updateEmail = e => {\r\n        setEmail(e.target.value);\r\n        console.log(\"I have updated the email! :) It is now: \" + email)\r\n    };*/\r\n\r\n    return <StartView\r\n    email={email}\r\n    setEmail={setEmail}\r\n    password={password}\r\n    setPassword={setPassword}\r\n    loginError={loginError}\r\n    setLoginError={setLoginError}\r\n    />\r\n}\r\n\r\nexport default Start;\r\n","import React from 'react';\r\nimport ChatView from './chatView.js'\r\n\r\nconst Chat = ({emailInChat}) => {\r\n\r\n    console.log(\"email in chatContainer \" + emailInChat)\r\n    return <ChatView\r\n    email = {emailInChat}\r\n    />\r\n}\r\n\r\nexport default Chat;","import React from 'react';\r\nimport './App.css';\r\nimport Start from './start/startContainer.js'\r\nimport Chat from './chat/chatContainer.js'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport StartComponent from './start/startView.js';\r\nimport ChatComponent from './chat/chatView.js';\r\n\r\n\r\n\r\nfunction App() {\r\n  const [email, setEmail] = React.useState(\"Default\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [loginError, setLoginError] = React.useState('');\r\n\r\n  const [emailInChat, setEmailInChat] = React.useState(\"default\");\r\n\r\n    React.useEffect( () => {\r\n        setEmailInChat(email);\r\n        console.log(\"I'm in the useEffect! :)\")\r\n    }   , [email])\r\n  \r\n\r\n  const updatePassword = e => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  // Kanske g책r att l철sa p책 snyggare s채tt 채n att ha ett separat state f철r chatView.\r\n//  const [emailInChat, setEmailInChat] = React.useState(\"No user\");\r\n  console.log(\"Email in chat in App.js: \" + email);\r\n\r\n\r\n  return (    \r\n  <Router>\r\n    <Switch>\r\n        <Route exact path=\"/\" >\r\n          <Start \r\n          email = {email}\r\n          setEmail = {setEmail}\r\n          password = {password}\r\n          setPassword = {updatePassword} // V채nster 채r blir variabelnamnet\r\n          loginError = {loginError}\r\n          setLoginError = {setLoginError}\r\n          />\r\n        </Route>\r\n        \r\n        <Route exact path=\"/chat\">\r\n          <Chat \r\n          emailInChat = {emailInChat}\r\n          />\r\n        </Route>\r\n    </Switch>\r\n  </Router>\r\n  );\r\n}\r\n// Har installerat react, react-router-dom och react-bootstrap\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst firebase = require('firebase');\r\nrequire('firebase/firestore');\r\n\r\n// Normalt s채tt vill man inte l채gga sin API-nyckel h채r men det funkar i testmilj철er\r\nconst firebaseConfig = { \r\n    apiKey: \"AIzaSyAdpOM4Bx2jIRTmqkLdxq2-WysYpZXW_BI\",\r\n    authDomain: \"chatt-app-b6c9a.firebaseapp.com\",\r\n    databaseURL: \"https://chatt-app-b6c9a.firebaseio.com\",\r\n    projectId: \"chatt-app-b6c9a\",\r\n    storageBucket: \"chatt-app-b6c9a.appspot.com\",\r\n    messagingSenderId: \"999297534472\",\r\n    appId: \"1:999297534472:web:5e2d45b432ecd04f385fbd\",\r\n    measurementId: \"G-P2SMFJCGS3\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nReactDOM.render(\r\n    <App />\r\n    , \r\n    document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}